!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,n){return r(e).on_list.push(n),window.ethereum}function n(e,n){const t=r(e);return u(t.on_list,(e=>e===n)),u(t.once_list,(e=>e===n)),window.ethereum}window.ethereum={isMetaMask:!1,isConnected:function(){return!0},on:e,once:function(e,n){return r(e).once_list.push(n),window.ethereum},off:n,addListener:e,removeListener:n,removeAllListeners:function(e){const n=r(e);return n.on_list=[],n.once_list=[],window.ethereum},send:function(e,n){return s({method:e,params:n})},sendAsync:function(e,n){s(e).then((e=>n(null,e)),(e=>n(e)))},enable:function(){return s({method:"eth_requestAccounts"})},request:s,_resolveRequest:function(e,n){const t=o.get(e);t&&(o.delete(e),t.resolve(n))},_rejectRequest:i,emit:function(e,n){const t=r(e),{once_list:o,on_list:s}=t;t.once_list=[],s.forEach((e=>e(n))),o.forEach((e=>e(n)))}};let t=1;const o=new Map;function s(e){return new Promise(((n,s)=>{const c=t++;try{o.set(c,{resolve:n,reject:s});const t={requestId:c,args:e},i=JSON.stringify(t);window.ReactNativeWebView.postMessage(i)}catch(e){i(c,e)}}))}function i(e,n){const t=o.get(e);t&&(o.delete(e),t.reject(n))}const c=new Map;function r(e){let n=c.get(e);return n||(n={on_list:[],once_list:[]},c.set(e,n)),n}function u(e,n){for(let t=e.length-1;t>=0;t--)n(e[t],t)||e.splice(t,1)}}));
//# sourceMappingURL=browser_ethereum_shim_raw.js.map
